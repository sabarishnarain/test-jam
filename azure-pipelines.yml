trigger: 
  - master

pr:
  - master

resources:
  containers:
  - container: docker-node # reusable alias
    image: node:10.16-stretch
  - container: docker-wdio
    image: sabarishnarain/node-chrome-jdk:node10-jdk8

jobs:
 - job : build
   displayName: build & test
   container: docker-node
   steps: 
   - task: UseDotNet@2
     displayName: 'Use .NET Core sdk'
     inputs:
       packageType: sdk
       version: 2.2.203
       installationPath: $(Agent.ToolsDirectory)/dotnet
   - script: npm ci
     displayName: install
   - script: npm run lint
     displayName: lint
   - script: npm run test-unit-ci
     displayName: test-unit
   - task: PublishTestResults@2
     condition: succeededOrFailed()
     inputs:
       testRunner: JUnit
       testResultsFiles: '**/test-results.xml'
       failTaskOnFailedTests: true # Fail the task if there are test failures
   - task: PublishCodeCoverageResults@1
     inputs: 
       codeCoverageTool: Cobertura
       summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
       reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'
 - job : test_wdio
   displayName: e2e-tests
   container: docker-wdio
   dependsOn: build
   variables:
    TESTJAM_ENV: test
   condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
   steps:
   - script: npm ci
   - script: chmod +x ./test/integ/runIntegTests.sh
   - script: ./test/integ/runIntegTests.sh
   - task: PublishTestResults@2
     condition: succeededOrFailed()
     inputs:
       testRunner: JUnit
       testResultsFiles: '**/wdio-results.xml'
       failTaskOnFailedTests: true # Fail the task if there are test failures

    